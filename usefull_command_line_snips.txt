# Twist Tester using keyboard and topic remapping
ros2 run teleop_twist_keyboard teleop_twist_keyboard --ros-args --remap /cmd_vel:=/simple_rover_locomotion/rover_velocities

# Run joystick node with remap
ros2 run joy joy_node --ros-args --remap /joy:=/gamepad

# Publish String
ros2 topic pub /chatter std_msgs/String "data: Hello ROS Developers"

# Dummy Stamped Twist Message:
ros2 topic pub -r 1 /simple_rover_locomotion/rover_velocities geometry_msgs/TwistStamped "{header: {stamp: {sec: 1, nanosec: 2}, frame_id: a frame},  twist: {linear: {x: 1.0, y: 2.0, z: 3.0}, angular:  {x: 1.0 ,y: 1.0 ,z: 1.0}}}"

# Disabled Twist Message
ros2 topic pub -r 1 /marta/rover_motion_cmd_disabled geometry_msgs/Twist "{linear: {x: 1.0, y: 2.0, z: 3.0}, angular:  {x: 1.0 ,y: 1.0 ,z: 1.0}}"

# Dummy Joint States
ros2 topic pub -r 1 /marta/joint_states sensor_msgs/JointState "{header: {stamp: {sec: 1576574448, nanosec: 2}, frame_id: a frame}, name: {joint_STR_LF, joint_STR_RR, joint_DRV_RF}, position: {90, 180, 10}, velocity: {0, 0, 0}, effort: {0, 0, 0}}"

# Rover Locomotion with path
ros2 run simple_rover_locomotion simple_rover_locomotion_node --ros-args -p "urdf_model_path:=/path/hello/world"

# Run URDF publisher from CLI
ros2 run robot_state_publisher robot_state_publisher /home/freki/rover_wss/ros2_ws/src/rover_config/urdf/rover_dummy.urdf

# Joint State Publisher
ros2 run joint_state_publisher joint_state_publisher --ros-args --remap /robot_description:=/marta/robot_description -p use_gui:=True

# Disable Locomotion Mode
ros2 service call /marta/simple_rover_locomotion_node/disable std_srvs/Trigger

# Enable Locomotion Mode
ros2 service call /marta/simple_rover_locomotion_node/enable std_srvs/Trigger

# Request Locmotion mode
ros2 service call /marta/change_locomotion_mode rover_msgs/ChangeLocomotionMode "{new_locomotion_mode: 'simple_rover_locomotion_node'}"

# Get Costmap
ros2 service call /global_costmap/get_costmap nav2_msgs/GetCostmap

# Navigate to Pose
# Not Working
ros2 action send_goal /NavigateToPose nav2_msgs/NavigateToPose "{pose: {header: {stamp: {sec: 1576574448, nanosec: 2}, frame_id: map}, pose: {position: {90, 180, 10}, quaternion: {0, 0, 0, 0} } } }"
# Sending a default pose.
ros2 action send_goal /NavigateToPose nav2_msgs/NavigateToPose "{pose: {} }"

# Export Model Path for Nav2 Simulation
export GAZEBO_MODEL_PATH=$GAZEBO_MODEL_PATH:/home/freki/rover_wss/ros2_ws/install/rover_config/share/rover_config/models